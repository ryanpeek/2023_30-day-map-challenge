---
title: '2023 30-day Map Challenge • Day 04 • Bad Map'
author: 'Ryan Peek'
execute:
  echo: false
  warning: false
  message: false
format: 
  html:
    self-contained: true
    code-overflow: wrap
    code-fold: true
    code-tools: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
    theme: journal #litera #default
    highlight-style: arrow
editor_options: 
  chunk_output_type: console
---

## Bad Map    


## Data


```{r}
#| label: the-data
#| message: false
#| warning: false
#| echo: false

library(tidyverse)
library(lutz)
library(tigris)
options(tigris_use_cache = TRUE)
library(sf)

if(!file.exists("data_raw/tz.zip")){
  ## Get the full time zone geojson from https://github.com/evansiroky/timezone-boundary-builder
  download.file("https://github.com/evansiroky/timezone-boundary-builder/releases/download/2019a/timezones-with-oceans.geojson.zip",
                destfile = "data_raw/tz.zip")
  unzip("data_raw/tz.zip", junkpaths = TRUE, exdir = "data_raw/")
}

# get US boundaries
us_states <- states(cb = TRUE, resolution = "20m")  
us_states_outside <- states(cb = TRUE, resolution = "20m")  #|> 
  #shift_geometry(position = "outside")
#plot(us_states$geometry)

```

```{r}
#| label: timezone-global

library(glue)
library(showtext)
library(ggtext)

# add locally
font_add_google("Noto Serif")
showtext_auto()

tz_full <- read_sf("data_raw/combined-with-oceans.json")

# check plots
tz_plot("America/Vancouver")
tz_plot("Europe/London")

# drop the etc and antartica options for now
tz_filt <- tz_full |> 
  filter(grepl("^Etc/",tzid))

# plot timezones globally
ggplot() + 
  geom_sf(data=tz_full, aes(fill=tzid), 
          alpha=0.7, show.legend = FALSE) +
  scale_fill_viridis_d() + 
  ggthemes::theme_map() +
  labs(title="<span style='color:#68228B'>Timezones</span> of the World") +
  theme(plot.title = 
          ggtext::element_markdown(face = "bold", size=30))

# filter to America only
tz_america <- tz_full |> 
  filter(grepl("^America", tzid))

# america only
ggplot() + 
  geom_sf(data=tz_america, aes(fill=tzid), alpha=0.7, show.legend = FALSE) +
  scale_fill_viridis_d() +
  ggthemes::theme_map() +
  coord_sf(xlim = c(-170, -30), ylim = c(10, 71)) +
  ggrepel::geom_text_repel(data=tz_america,
                           aes(label=tzid, geometry=geometry), 
                           stat = "sf_coordinates", 
                           #force_pull = 0.3, force = .5,
                           min.segment.length = .2, size=4.5,
                           color="white",
                           bg.color = "#3B528BFF", bg.r = 0.12,
                           max.overlaps = 2,
                           segment.size  = 0.2,
                           segment.color = "grey50") +
  ggspatial::annotation_north_arrow()

```



```{r}
#| label: plot-image
#| column: screen
#| out-width: 100%
#| message: false
#| echo: false
#| warning: false

library(rnaturalearth)
library(sf)

wrld <- ne_countries(scale = "medium", returnclass = "sf")
#st_crs(wrld)
# use eqearth projection
wrld <- st_transform(wrld, crs = "+proj=eqearth")

# select countries 
wrld_polly <- wrld |> #filter(sovereignt %in% dat$country_loc) |> 
  inner_join(dat, by=c("name"="country_loc")) |> 
  dplyr::relocate(.before=name, c(term, definition))

# plot
ggplot() +
  geom_sf(data=wrld, fill=alpha("gray70", 0.7), color=alpha("gray10", 0.5)) +
  geom_sf(data=wrld_polly, fill=alpha("#5DC863FF", 0.5), color=alpha("gray10", 0.7), linewidth=0.5) +
  ggrepel::geom_text_repel(data=wrld_polly,
                           aes(label=term, geometry=geometry), 
                           stat = "sf_coordinates", 
                           force_pull = 0.3, force = .5,
                           min.segment.length = .2, size=4.5,
                           color="white",
                           bg.color = "#3B528BFF", bg.r = 0.12,
                           max.overlaps = 30,
                           segment.size  = 0.2,
                           segment.color = "grey50") +
  ggspatial::annotation_north_arrow() +
  labs(
    x = NULL, y = NULL,
    title = "Polly-gons: Words for Tadpole",
    subtitle = "#30DayMapChallenge • Day-03 • Polly-gons",
    caption = "+proj=eqearth • R 4.3.1 • Ryan Peek \n <https://github.com/ryanpeek/2023_30-day-map-challenge/>",
  ) +
  hrbrthemes::theme_ft_rc(grid="") +
  theme(axis.text=element_blank(),
        plot.subtitle = element_text(size=16),
        plot.caption = element_text(color="gray90", size=12))

#save
#ggsave(filename = "figs/day03-pollygons.png", width = 11, height = 8.5, dpi=300, bg = "white")


```

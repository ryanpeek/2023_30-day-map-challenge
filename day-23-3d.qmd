---
title: '2023 30-day Map Challenge • Day 23 • 3D'
author: 'Ryan Peek'
execute:
  echo: false
  warning: false
  message: false
format: 
  html:
    self-contained: true
    code-overflow: wrap
    code-fold: true
    code-tools: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
    theme: journal #litera #default
    highlight-style: arrow
editor_options: 
  chunk_output_type: console
---

## 3D

Cool 3d map of terrain (NFA)

## Data

```{r}
#| label: the-data
#| message: false
#| warning: false
#| echo: true
#| eval: false

library(tidyverse)
library(hrbrthemes)
library(janitor)
library(glue)
library(sf)
library(terra)
library(rayshader)
library(elevatr)
library(nhdplusTools)
library(tigris)
options(tigris_use_cache = TRUE)
library(colorspace)
library(showtext)
library(rnaturalearth)
#library(classInt)
library(fs)
font_add_google("Bebas Neue")
font_add_google("Roboto Slab")
showtext_auto()


# global canopy height:
# https://nlang.users.earthengine.app/view/global-canopy-height-2020
# data (see tile_index.html): https://libdrive.ethz.ch/index.php/s/cO8or7iOe5dT2Rt#editor

# for southern sierra/yosemite:
#	https://libdrive.ethz.ch/index.php/s/cO8or7iOe5dT2Rt/download?path=%2F3deg_cogs&files=ETH_GlobalCanopyHeight_10m_2020_N36W120_Map.tif
# https://libdrive.ethz.ch/index.php/s/cO8or7iOe5dT2Rt/download?path=%2F3deg_cogs&files=ETH_GlobalCanopyHeight_10m_2020_N36W120_Map_SD.tif

#CA is N33W123, N33W120, N33W117, N36W123, N36W120, N36W117, N39W123, N39W126, N36W126

# get forest canopy height
urls <- c("https://libdrive.ethz.ch/index.php/s/cO8or7iOe5dT2Rt/download?path=%2F3deg_cogs&files=ETH_GlobalCanopyHeight_10m_2020_N36W120_Map.tif")

# can write a loop or purrr here for multiple
if(!file.exists("data_raw/GlobalCanopyHeight_10m_2020_N36W120_Map.tif")){
  download.file(urls, destfile = glue("data_raw/{basename(gsub('.*ETH_','', urls))}"), mode = "wb")
}

# it's big! >200MB

# get park boundary for YNP/Emigrant
library(osmdata)
ynp_bb <- getbb("Yosemite National Park")
ynp_bb
ynp_boundary <- ynp_bb |> opq() |> 
  # try admin or area?
  add_osm_feature(key = "boundary") |> 
  osmdata_sf()
# see available_tags or available_features
emig <- ynp_boundary$osm_multipolygons |> filter(grepl("Emigrant", name))

# get rivs
# emig_rivs <- opq(bbox = sf::st_bbox(emig)) |> 
#   add_osm_feature(key = "waterway") %>%
#   osmdata_sf()

# plot
#plot(emig$geometry)
#plot(emig_rivs$osm_lines$geometry, col="blue", lwd=0.3, add=TRUE)

# load forest height and crop
rast_fh <- terra::rast("data_raw/GlobalCanopyHeight_10m_2020_N36W120_Map.tif") |> 
  terra::crop(emig, snap = "in", mask = TRUE)
# use mosaic if using a bunch of rast

# now agg 
rast_fh_emig <- rast_fh |> terra::aggregate(fact = 4)
plot(rast_fh_emig)
#plot(rast_fh)

# convert to dataframe
fh_df <- as.data.frame(rast_fh_emig, xy = TRUE)
glimpse(fh_df) # 380k pixels
fh_df_full <- as.data.frame(rast_fh, xy = TRUE)
names(fh_df_full)[3] <- "height_m"
#glimpse(fh_df_full) # 6 million pixels (BIG)

# change value to height
names(fh_df)[3] <- "height_m"

# fix breaks so more even?
fh_breaks <- classInt::classIntervals(fh_df$height_m, n = 5, style = "pretty")$brks

# make a col palette
colors <- sequential_hcl(5, palette = "Terrain 2", rev = TRUE)
swatchplot(colors)

texture <- colorRampPalette(colors, bias = 2)(6)
swatchplot(texture)

# plot
p <- ggplot(data = fh_df) +
  geom_raster(aes(x = x, y = y, fill = height_m)) +
  scale_fill_gradientn(
    name = "height (m)",
    colors = texture,
    breaks = round(fh_breaks, 0)) +
  coord_sf(crs = 4326) +
  guides(fill = guide_legend(
    direction = "vertical",
    keyheight = unit(5, "mm"),
    keywidth = unit(5, "mm"),
    title.position = "top", title.hjust = .5,
    label.position = "right", label.hjust = .5,
    ncol = 1, byrow = F)
  ) +
  theme_void(base_family = "Bebas Neue") +
  labs()+#title="Forest Canopy of Emigrant Wilderness") +
  theme(
    title = element_text(size=40),
    axis.line = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    legend.position = "right",
    legend.title = element_text(size = 18, color = "grey10"),
    legend.text = element_text(size = 16, color = "grey10"),
    #panel.grid.major = element_line(color = "white"),
    #panel.grid.minor = element_line(color = "white"),
    #plot.background = element_rect(fill = "white", color = NA),
    #legend.background = element_rect(fill = "white", color = NA),
    #panel.border = element_rect(fill = NA, color = "white"),
    plot.margin = unit(c(t = 2, r = 0, b = 0, l = 0), "lines"))

p

#ggsave(p, filename = "figs/day23-3d-ggplot_hi.png", width = 6, height = 6, dpi=300)
ggsave(p, filename = "figs/day23-3d-ggplot.png", width = 6, height = 6, dpi=300)

# # set window height and width based on object size
w <- nrow(rayshade_matrix)
h <- ncol(rayshade_matrix)

# scale the dimensions to use as multipliers
wr <- w / max(c(w,h))
hr <- h / max(c(w,h))

# limit ratio so that the shorter side is at least .7 of longer side
if (min(c(wr, hr)) < .80) {
  if (wr < .80) {
    wr <- .80
  } else {
    hr <- .80
  }
}


# render ggplot
rayshader::plot_gg(
    ggobj = p,
    width = 4,
    height = 3.7,
    scale = 150,
    solid = F,
    soliddepth = 0,
    shadow = TRUE,
    shadow_intensity = .99,
    offset_edges = F,
    sunangle = 315,
    windowsize = c(900*wr,900*hr),
    #window.size = c(800, 800),
    zoom = .4,
    phi = 30,
    theta = -30,
    multicore = T
)

render_camera(phi = 45, fov=40, theta = 10,
              shift_vertical = 5, zoom = 0.7)


# render high
rayshader::render_highquality(
    filename = "figs/day23-3d-render.png",
    preview = FALSE,
    interactive = FALSE,
    light = TRUE,
    lightdirection = c(315, 310, 315, 310),
    lightintensity = c(1000, 1500, 150, 100),
    lightaltitude = c(15, 15, 80, 80),
    ground_material = rayrender::microfacet(roughness = .6),
    #width = 4000,
    #height = 4000
    width = 900*wr,
    height = 900*hr
)

```


```{r}
#| label: rayshade
#| message: false
#| warning: false
#| echo: true
#| eval: false

library(magick)
library(glue)
library(colorspace)
library(MetBrewer)

colors <- sequential_hcl(12, palette = "Terrain 2", rev = TRUE)
swatchplot(colors)
text_color <- colors[12]
swatchplot(text_color)
caption_color <- "#252a32"

## Read in Image ---------------
img <- image_read("figs/day23-3d-render.png")
image_info(img)

s <- darken("#9a9397", .1)
shadow <- "#9a9397"
inset <- image_read("figs/day23-3d-ggplot.png")

## Add Stuff to Image and Write Out ------------------------------------------------------

img |>
  image_crop(geometry = "3800x38000+50+50", gravity = "center") |>
  image_annotate(text = "Forest Canopy of Emigrant Wilderness", 
                 gravity = "north",
                 location = "-300+200", font = "Bebas Neue",
                 color = caption_color, kerning = 2,
                 size = 200, weight = 200) |>
  image_composite(image_scale(inset, geometry = "70%x"),
                  gravity = "northeast",
                  offset = "+10+200") |>
  image_annotate(text = "#30DayMapChallenge • Day-23 • 3d", 
                 gravity = "northwest",
                 location = "+300+600", font = "Bebas Neue",
                 color = caption_color, kerning = 1,
                 size = 100, weight = 100) |> 
  image_annotate(text = "Ryan Peek • Data: <https://langnico.github.io/globalcanopyheight/>", 
                 gravity = "northwest",
                 location = "+300+800", font = "Bebas Neue",
                 color = caption_color, kerning = 1,
                 size = 80, weight = 50) |>
  image_write("figs/day23-3d-titled.png")

```

